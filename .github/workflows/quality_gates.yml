name: Quality Gates

on:
  workflow_call:
    secrets:
      askrella_libs_key:
        required: true
        description: The SSH key for the Askrella Libs
      askrella_telemetry_key:
        required: true
        description: The SSH key for the Askrella Telemetry
      askrella_github_identity_ssh:
        required: true
        description: The SSH key for the Askrella Identity

env:
  GO_VERSION: 1.23.0
  GO111MODULE: on

jobs:
  quality_gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [terraform_qg, checkov, terrascan, tfsec, tests, mutation, lint]
    steps:
      - uses: actions/checkout@v4

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Add SSH-Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.askrella_libs_key }}
            ${{ secrets.askrella_telemetry_key }}
            ${{ secrets.askrella_github_identity_ssh }}

      - name: Configure Go Askrella Private Repos
        run: |
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/" && \
          go env -w GOPRIVATE="github.com/askrella"

        # Due to the inability of GitHub workflow service containers to properly handle the "command"
        # option, we have to rely on the compose file to pass on the realm import option to the CLI
      - name: Start KeyCloak
        run: docker compose up --wait

      - name: (Go) Run Tests
        id: go-tests
        run: go test ./...
        continue-on-error: true # For now

  mutation:
    name: Mutation Tests (Ooze)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Add SSH-Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.askrella_libs_key }}
            ${{ secrets.askrella_telemetry_key }}
            ${{ secrets.askrella_github_identity_ssh }}

      - name: Configure Go Askrella Private Repos
        run: |
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/" && \
          go env -w GOPRIVATE="github.com/askrella"

        # Due to the inability of GitHub workflow service containers to properly handle the "command"
        # option, we have to rely on the compose file to pass on the realm import option to the CLI
      - name: Start KeyCloak
        run: docker compose up --wait

      - name: (Go) Run Mutation Tests
        id: go-tests
        run: go test -tags=mutation
        continue-on-error: true # For now due to timeout

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.3"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1
        with:
          version: v1.62.2
          args: ./...
        continue-on-error: true # For now

  terraform_qg:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Remove S3 backend from Terraform
        run: sed -i '/backend \"s3\" { /,/}/d' terraform.tf
        working-directory: ./deploy
        continue-on-error: true

      - name: (Terraform) Initialize
        run: terraform init -input=false
        working-directory: ./deploy
        continue-on-error: true

      - name: Terraform Format (Ignored)
        run: terraform fmt -check -recursive -diff
        continue-on-error: true
        working-directory: ./deploy

      - name: Terraform Validate
        id: tf-validate
        run: terraform validate
        working-directory: ./deploy
        continue-on-error: true # For now, enable when terraform code available

  checkov:
    name: Checkov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: (Checkov) Run checks...
        uses: bridgecrewio/checkov-action@v12.2875.0 # Verified vendor
        id: checkov
        with:
          quiet: true
          soft_fail: true

  terrascan:
    name: Terrascan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: (Terrascan) Run checks...
        id: terrascan
        uses: tenable/terrascan-action@v1.5.0 # No release since Oct 27, 2021 (last commit July 7th 2022, actively maintained)
        with:
          iac_type: terraform
          only_warn: true
          sarif_upload: true

  tfsec:
    name: TFSec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: (TFSec) Run checks...
        id: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4 # Verified vendor
        with:
          #sarif_file: tfsec.sarif
          full_repo_scan: true
          format: lovely
